{
  "version": 3,
  "sources": ["../index.ts"],
  "sourcesContent": ["import { countryLifeExpectancy } from './data.js'\n\nvar lifeExpectancy: number\n\nconst remainingYears = (life: age) => {\n  let date = new Date()\n  let year = date.getFullYear()\n  let currentAge = year - life.yearOfBirth\n  let countryExpectancy = life.residentCountry\n\n  // Destructuring countries\n\n  const [countries, expectancies] = countryLifeExpectancy\n  const countryNames = countries.country\n  const listOfCountries = Object.values(countryNames)\n\n  // Destructuring life expectancy\n\n  const expectancyYears = expectancies.years\n  const listOfExpectancies = Object.values(expectancyYears)\n\n  //console.log(listOfExpectancies)\n\n  for (let value in listOfCountries) {\n    if (listOfCountries[value] == countryExpectancy) {\n      lifeExpectancy = Number(listOfExpectancies[(listOfCountries.indexOf(countryExpectancy))].toFixed())\n      lifeExpectancy = lifeExpectancy - currentAge\n    }\n  }\n\n  return lifeExpectancy\n}\n\nconst satoglu: age = {\n  yearOfBirth: 2000,\n  residentCountry: 'Nigeria'\n}\n\nif (lifeExpectancy === 0) {\n  console.log(`Sorry ${satoglu.residentCountry}\\'s data is not available`)\n} else {\n  console.log(`You have ${remainingYears(satoglu)} years left.`)\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,kBAAsC;AAEtC,IAAI;AAEJ,MAAM,iBAAiB,CAAC,SAAc;AACpC,MAAI,OAAO,IAAI;AACf,MAAI,OAAO,KAAK;AAChB,MAAI,aAAa,OAAO,KAAK;AAC7B,MAAI,oBAAoB,KAAK;AAI7B,QAAM,CAAC,WAAW,gBAAgB;AAClC,QAAM,eAAe,UAAU;AAC/B,QAAM,kBAAkB,OAAO,OAAO;AAItC,QAAM,kBAAkB,aAAa;AACrC,QAAM,qBAAqB,OAAO,OAAO;AAIzC,WAAS,SAAS,iBAAiB;AACjC,QAAI,gBAAgB,UAAU,mBAAmB;AAC/C,uBAAiB,OAAO,mBAAoB,gBAAgB,QAAQ,oBAAqB;AACzF,uBAAiB,iBAAiB;AAAA;AAAA;AAItC,SAAO;AAAA;AAGT,MAAM,UAAe;AAAA,EACnB,aAAa;AAAA,EACb,iBAAiB;AAAA;AAGnB,IAAI,mBAAmB,GAAG;AACxB,UAAQ,IAAI,SAAS,QAAQ;AAAA,OACxB;AACL,UAAQ,IAAI,YAAY,eAAe;AAAA;",
  "names": []
}
